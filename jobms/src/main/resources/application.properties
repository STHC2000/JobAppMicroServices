spring.application.name=job-service
server.port=8082

#Database
#spring.h2.console.enabled=true
#spring.datasource.url=jdbc:h2:mem:test
#spring.jpa.show-sql=true
#spring.jpa.hibernate.dll-auto=update

#PostgreSQL Configuration
spring.datasource.url=jdbc:postgresql://localhost:5432/job
spring.datasource.username=root
spring.datasource.password=root
spring.jpa.database=POSTGRESQL
spring.jpa.show-sql=true
spring.jpa.hibernate.dll-auto=create-drop
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# Eureka
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka/
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true

# Zipkin
management.tracing.sampling.probability=1.0

# Config
spring.config.import=optional:configserver:http://localhost:8080
spring.profiles.active=dev


# Resilience 4J
# register health indicator (companyBreaker is an instance)
resilience4j.circuitbreaker.instances.companyBreaker.registerHealthIndicator=true
#calculate percentage of failure rate
resilience4j.circuitbreaker.instances.companyBreaker.slidingWindowSize=10
# this will records number of calls before circuit breaker failure rate
resilience4j.circuitbreaker.instances.companyBreaker.minimumNumberOfCalls=5
# decided to change state after this no of calls
resilience4j.circuitbreaker.instances.companyBreaker.permittedNumberOfCallsInHalfOpenState=3
# how long circuit breaker stay in open state
resilience4j.circuitbreaker.instances.companyBreaker.waitDurationInOpenState=10s
# it decides when C.B transfer to open
resilience4j.circuitbreaker.instances.companyBreaker.failureRateThreshold=50
# Register health indicator
resilience4j.circuitbreaker.instances.companyBreaker.register-health-indicator=true
# automatically change state from open to half-open
resilience4j.circuitbreaker.instances.companyBreaker.automatic-transition-from-open-to-half-open-enabled=true
# automatically change state from open to half-open
resilience4j.circuitbreaker.instances.companyBreaker.sliding-window-type=count_based

#Max number of retry,if network call is fails
resilience4j.circuitbreaker.instances.companyBreaker.max-attempts=5
#Wait duration between each attempts
resilience4j.circuitbreaker.instances.companyBreaker.wait-duration=2s

# Actuator Configuration
management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=health
management.endpoint.health.show-details=always
